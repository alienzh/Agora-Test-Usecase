plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load(inputStream)

android {
    namespace 'io.agora.mediarelay'
    compileSdk 33

    defaultConfig {
        applicationId "io.agora.demo.mediarelay"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "AGORA_APP_ID", "\"${properties.getProperty("AGORA_APP_ID", "")}\"")
        buildConfigField("String", "AGORA_CUSTOMER_KEY", "\"${properties.getProperty("AGORA_CUSTOMER_KEY", "")}\"")
        buildConfigField("String", "AGORA_CUSTOMER_SECRET", "\"${properties.getProperty("AGORA_CUSTOMER_SECRET", "")}\"")

        buildConfigField("String", "CUSTOM_APP_ID", "\"${properties.getProperty("CUSTOM_APP_ID", "")}\"")
        buildConfigField("String", "CUSTOM_CUSTOMER_KEY", "\"${properties.getProperty("CUSTOM_CUSTOMER_KEY", "")}\"")
        buildConfigField("String", "CUSTOM_CUSTOMER_SECRET", "\"${properties.getProperty("CUSTOM_CUSTOMER_SECRET", "")}\"")

        ndk {
            abiFilters 'arm64-v8a'
        }
    }

    signingConfigs {
        myConfig {
            storeFile new File(rootProject.rootDir.absolutePath + "/keystore.key")
            storePassword "965606"
            keyAlias "agora"
            keyPassword "965606"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding  = true
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['src/main/jniLibs']
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                outputFileName = new File("AGDemo_Media_Relay_" +
                        "v" + defaultConfig.versionName + "_" +
                        new Date().format("yyyyMMddHHmm") + "_" +
                        buildType.name + ".apk")
            }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.github.mrmike:ok2curl:0.8.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    // rtc
    // http://10.80.1.174:8090/agora_sdk/4.3/nightly_build/2024-04-24/android/full/Agora_Native_SDK_for_Android_rel.v4.3_59640_FULL_20240424_0253_300190.zip
//    implementation 'io.agora.rtc:full-sdk:4.3.0'
    // http://10.80.1.174:8090/agora_sdk/4.1.1.26/official_build/2024-01-30/android/full/Agora_Native_SDK_for_Android_rel.v4.1.1.26_57277_FULL_20240130_1218_292068.zip
    implementation 'io.agora:authentication:2.0.0'
    implementation 'commons-codec:commons-codec:1.16.0'
}